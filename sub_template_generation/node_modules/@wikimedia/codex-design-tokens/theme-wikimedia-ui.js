
// Codex Design Tokens v1.3.5
// Design System for Wikimedia
// See https://doc.wikimedia.org/codex/latest/design-tokens/overview.html

export const cdxFontSizeBase = "16px"; // This token is targeted exclusively for font-size derived calculations. Apply `font-size-medium` and similar for component font size property use.
export const cdxFontSizeXSmall = "0.75em"; // `x` stands for extra. In this case extra small.
export const cdxFontSizeSmall = "0.875em";
export const cdxFontSizeMedium = "1em";
export const cdxFontSizeLarge = "1.125em";
export const cdxFontSizeXLarge = "1.25em";
export const cdxFontSizeXxLarge = "1.5em";
export const cdxFontSizeXxxLarge = "1.75em";
export const cdxColorBase = "#202122";
export const cdxColorBaseHover = "#404244"; // Aimed to be replaced by `color.gray600` in future.
export const cdxColorEmphasized = "#000";
export const cdxColorSubtle = "#54595d";
export const cdxColorPlaceholder = "#72777d";
export const cdxColorDisabled = "#72777d";
export const cdxColorInverted = "#fff";
export const cdxColorProgressive = "#36c"; // 'Progressive' Color and states
export const cdxColorProgressiveHover = "#447ff5";
export const cdxColorProgressiveActive = "#2a4b8d";
export const cdxColorProgressiveFocus = "#36c";
export const cdxColorDestructive = "#d73333"; // 'Destructive' Color and states
export const cdxColorDestructiveHover = "#ff4242";
export const cdxColorDestructiveActive = "#b32424";
export const cdxColorDestructiveFocus = "#d73333";
export const cdxColorVisited = "#6b4ba1"; // 'Visited' color. In combination with progressive. Used for default links.
export const cdxColorError = "#d73333";
export const cdxColorWarning = "#edab00"; // Note, this is only meant for warning icon for contrast reasons.
export const cdxColorSuccess = "#14866d"; // Note, this needs to use a tone darker than Red and Yellow for contrast reasons with background White.
export const cdxColorNotice = "#202122";
export const cdxColorLinkRed = "#d73333"; // Red ('new') Link color and states
export const cdxColorLinkRedHover = "#ff4242";
export const cdxColorLinkRedActive = "#b32424";
export const cdxColorLinkRedFocus = "#d73333";
export const cdxColorLinkRedVisited = "#a55858";
export const cdxOpacityBase = "1";
export const cdxOpacityMedium = "0.65";
export const cdxOpacityLow = "0.3";
export const cdxOpacityTransparent = "0";
export const cdxFilterInvertIcon = "0";
export const cdxFilterInvertPrimaryButtonIcon = "1";
export const cdxBackgroundPositionBase = "center";
export const cdxBackgroundSizeSearchFigure = "cover"; // Use in TypeaheadSearch and Thumbnail components for the thumb container.
export const cdxZIndexBottom = "-100"; // Use descriptive `z-index` tokens for layout purposes.
export const cdxZIndexBase = "0";
export const cdxZIndexAboveContent = "1";
export const cdxZIndexToolbar = "2";
export const cdxZIndexDropdown = "50";
export const cdxZIndexSticky = "100";
export const cdxZIndexFixed = "200";
export const cdxZIndexOffCanvasBackdrop = "300";
export const cdxZIndexOffCanvas = "350";
export const cdxZIndexOverlayBackdrop = "400";
export const cdxZIndexOverlay = "450";
export const cdxZIndexTooltip = "800";
export const cdxZIndexToastNotification = "900";
export const cdxZIndexTop = "9999";
export const cdxZIndexStacking0 = "0"; // Use stacking-specific z-index tokens inside components to layer individual elements.
export const cdxZIndexStacking1 = "1";
export const cdxZIndexStacking2 = "2";
export const cdxZIndexStacking3 = "3";
export const cdxBoxSizingBase = "border-box";
export const cdxSize0 = "0";
export const cdxSize6 = "0.0625em";
export const cdxSize12 = "0.125em";
export const cdxSize25 = "0.25em";
export const cdxSize50 = "0.5em";
export const cdxSize75 = "0.75em";
export const cdxSize100 = "1em";
export const cdxSize125 = "1.25em";
export const cdxSize150 = "1.5em";
export const cdxSize200 = "2em";
export const cdxSize250 = "2.5em";
export const cdxSize275 = "2.75em";
export const cdxSize300 = "3em";
export const cdxSize400 = "4em";
export const cdxSize800 = "8em";
export const cdxSize1600 = "16em";
export const cdxSize2400 = "24em";
export const cdxSize2800 = "28em";
export const cdxSize3200 = "32em";
export const cdxSize5600 = "56em";
export const cdxSizeViewportWidthFull = "100vw";
export const cdxSizeViewportHeightFull = "100vh";
export const cdxSizeAbsolute1 = "1px";
export const cdxSizeAbsolute9999 = "9999px";
export const cdxSizeThird = "33.33%";
export const cdxSizeHalf = "50%";
export const cdxSizeFull = "100%";
export const cdxSizeDouble = "200%";
export const cdxSizeSearchFigure = "2.5em"; // Alias for use in TypeaheadSearch and Thumbnail components for the same purpose and for better code readability.
export const cdxSizeIconXSmall = "0.75em";
export const cdxSizeIconSmall = "1em";
export const cdxSizeIconMedium = "1.25em";
export const cdxMaxWidthBase = "none";
export const cdxMaxWidthBreakpointMobile = "calc( 640px - 1px )"; // A mobile device's maximum available screen width. Many older feature phones have screens smaller than this value.
export const cdxMaxWidthBreakpointTablet = "calc( 1120px - 1px )"; // A tablet device's maximum available screen width. Note, the size chosen is eager to be re-evaluated with Web team and Product Analytics.
export const cdxMaxWidthBreakpointDesktop = "calc( 1680px - 1px )"; // A desktop device's maximum available screen width.
export const cdxMaxWidthButton = "28em"; // Note, that this is a slight amendment from WikimediaUI Base from `28.75em` = `460px` to `448px` – `dimension.2800`
export const cdxBorderStyleBase = "solid";
export const cdxBorderStyleDashed = "dashed";
export const cdxBoxShadowDropSmall = "0 1px 1px rgba( 0, 0, 0, 0.2 )"; // This features color as part of the theme token value.
export const cdxBoxShadowDropMedium = "0 2px 2px 0 rgba( 0, 0, 0, 0.2 )"; // This features color as part of the theme token value.
export const cdxBoxShadowDropXxLarge = "0 20px 48px 0 rgba( 0, 0, 0, 0.2 )"; // This features color as part of the theme token value.
export const cdxBoxShadowInsetSmall = "inset 0 0 0 1px";
export const cdxBoxShadowInsetMedium = "inset 0 0 0 2px";
export const cdxBoxShadowInsetMediumVertical = "inset 0 -2px 0 0";
export const cdxBoxShadowOutsetSmall = "0 0 0 1px";
export const cdxBoxShadowOutsetSmallTop = "0 -1px 0 0";
export const cdxBoxShadowOutsetSmallStart = "-1px 0 0 0";
export const cdxBoxShadowColorBase = "#000";
export const cdxBoxShadowColorProgressiveActive = "#2a4b8d";
export const cdxBoxShadowColorProgressiveFocus = "#36c";
export const cdxBoxShadowColorProgressiveSelected = "#36c";
export const cdxBoxShadowColorProgressiveSelectedHover = "#447ff5";
export const cdxBoxShadowColorProgressiveSelectedActive = "#2a4b8d";
export const cdxBoxShadowColorDestructiveFocus = "#d73333";
export const cdxBoxShadowColorInverted = "#fff";
export const cdxBoxShadowColorTransparent = "transparent";
export const cdxFontFamilySerif = "'Linux Libertine', 'Georgia', 'Times', 'Source Serif Pro', serif";
export const cdxFontFamilyMonospace = "'Menlo', 'Consolas', 'Liberation Mono', 'Fira Code', 'Courier New', monospace";
export const cdxFontFamilyBase = "sans-serif"; // Reference Vector's default fallback sans instead of the deprecated value `font-family-sans` in WikimediaUI Base.
export const cdxFontFamilySystemSans = "-apple-system, 'BlinkMacSystemFont', 'Segoe UI', 'Roboto', 'Inter', 'Helvetica', 'Arial', sans-serif";
export const cdxFontFamilySansFallback = "sans-serif";
export const cdxFontFamilySerifFallback = "serif";
export const cdxFontFamilyMonospaceFallback = "monospace, monospace";
export const cdxFontFamilyHeadingMain = "'Linux Libertine', 'Georgia', 'Times', 'Source Serif Pro', serif"; // Legacy value from WikimediaUI Base. Use for first heading special treatment.
export const cdxFontWeightHairline = "100";
export const cdxFontWeightLight = "300";
export const cdxFontWeightNormal = "400";
export const cdxFontWeightSemiBold = "600";
export const cdxFontWeightBold = "700";
export const cdxLineHeightXxxSmall = "1.25"; // `x` stands for extra. In this case extra-extra-extra small.
export const cdxLineHeightXxSmall = "1.375";
export const cdxLineHeightSmall = "1.5714285";
export const cdxLineHeightMedium = "1.6";
export const cdxTextDecorationNone = "none";
export const cdxTextDecorationLineThrough = "line-through";
export const cdxTextDecorationUnderline = "underline";
export const cdxTextOverflowClip = "clip";
export const cdxTextOverflowEllipsis = "ellipsis";
export const cdxTabSizeBase = "4";
export const cdxTransitionDurationBase = "100ms";
export const cdxTransitionDurationMedium = "250ms";
export const cdxTransitionPropertyBase = "background-color, color, border-color, box-shadow";
export const cdxTransitionPropertyFade = "opacity";
export const cdxTransitionPropertyIcon = "color";
export const cdxTransitionPropertyIconCssOnly = "background-color";
export const cdxTransitionPropertyToggleSwitchGrip = "background-color, border-color, transform";
export const cdxTransitionTimingFunctionSystem = "ease";
export const cdxTransitionTimingFunctionUser = "ease-out";
export const cdxAnimationDelayNone = "0ms";
export const cdxAnimationDelayMedium = "-160ms";
export const cdxAnimationDelaySlow = "-330ms";
export const cdxAnimationDurationMedium = "1600ms";
export const cdxAnimationDurationSlow = "2000ms";
export const cdxAnimationTimingFunctionBase = "linear";
export const cdxAnimationTimingFunctionBouncing = "ease-in-out";
export const cdxAnimationIterationCountBase = "infinite";
export const cdxCursorBase = "default";
export const cdxCursorBaseDisabled = "default";
export const cdxCursorBaseHover = "pointer";
export const cdxCursorGrab = "grab";
export const cdxCursorGrabbing = "grabbing";
export const cdxCursorHelp = "help";
export const cdxCursorMove = "move";
export const cdxCursorNotAllowed = "not-allowed";
export const cdxCursorResizeNesw = "nesw-resize";
export const cdxCursorResizeNwse = "nwse-resize";
export const cdxCursorText = "text";
export const cdxCursorZoomIn = "zoom-in";
export const cdxCursorZoomOut = "zoom-out";
export const cdxUnitAbsolute = "px";
export const cdxUnitRelative = "em";
export const cdxAccentColorBase = "#36c";
export const cdxBackgroundColorInteractive = "#eaecf0";
export const cdxBackgroundColorInteractiveSubtle = "#f8f9fa";
export const cdxBackgroundColorDisabled = "#c8ccd1"; // Components like Buttons, Checkboxes, Radios, ProgressBars….
export const cdxBackgroundColorDisabledSubtle = "#eaecf0"; // Components like TextInputs, Selects….
export const cdxBackgroundColorProgressive = "#36c";
export const cdxBackgroundColorProgressiveHover = "#447ff5";
export const cdxBackgroundColorProgressiveActive = "#2a4b8d";
export const cdxBackgroundColorProgressiveFocus = "#36c";
export const cdxBackgroundColorProgressiveSubtle = "#eaf3ff";
export const cdxBackgroundColorDestructive = "#d73333";
export const cdxBackgroundColorDestructiveHover = "#ff4242";
export const cdxBackgroundColorDestructiveActive = "#b32424";
export const cdxBackgroundColorDestructiveFocus = "#d73333";
export const cdxBackgroundColorDestructiveSubtle = "#fee7e6";
export const cdxBackgroundColorError = "#d73333";
export const cdxBackgroundColorErrorHover = "#ff4242";
export const cdxBackgroundColorErrorActive = "#b32424";
export const cdxBackgroundColorErrorSubtle = "#fee7e6";
export const cdxBackgroundColorWarningSubtle = "#fef6e7";
export const cdxBackgroundColorSuccessSubtle = "#d5fdf4";
export const cdxBackgroundColorNoticeSubtle = "#eaecf0";
export const cdxBackgroundColorBackdropLight = "rgba( 255, 255, 255, 0.65 )"; // Backdrop is the term used by CSS Fullscreen API and is used to dim the background when a modal Dialog is open. Also known as overlay mask.
export const cdxBackgroundColorBackdropDark = "rgba( 0, 0, 0, 0.65 )";
export const cdxBackgroundColorBase = "#fff"; // Background Colors for static elements (for page layout, sections, etc.) from here on.
export const cdxBackgroundColorNeutral = "#eaecf0";
export const cdxBackgroundColorNeutralSubtle = "#f8f9fa";
export const cdxBackgroundColorTransparent = "transparent";
export const cdxBackgroundColorButtonQuietHover = "rgba( 0, 24, 73, 0.027 )";
export const cdxBackgroundColorButtonQuietActive = "rgba( 0, 24, 73, 0.082 )";
export const cdxBackgroundColorInputBinaryChecked = "#36c";
export const cdxBackgroundColorTabListItemFramedHover = "rgba( 255, 255, 255, 0.3 )";
export const cdxBackgroundColorTabListItemFramedActive = "rgba( 255, 255, 255, 0.65 )";
export const cdxOpacityIconBase = "0.87";
export const cdxOpacityIconBaseHover = "0.74";
export const cdxOpacityIconBaseSelected = "1";
export const cdxOpacityIconBaseDisabled = "0.51";
export const cdxOpacityIconPlaceholder = "0.51";
export const cdxOpacityIconSubtle = "0.67";
export const cdxMinSizeInteractivePointer = "32px";
export const cdxMinSizeInteractiveTouch = "44px";
export const cdxMinSizeSearchFigure = "40px"; // Alias for use in TypeaheadSearch and Thumbnail components for the same purpose and for better code readability.
export const cdxMinSizeIconXSmall = "12px";
export const cdxMinSizeIconSmall = "16px";
export const cdxMinSizeIconMedium = "20px";
export const cdxMinSizeInputBinary = "20px";
export const cdxMinSizeToggleSwitchGrip = "20px";
export const cdxMinWidthMedium = "256px";
export const cdxMinWidthBreakpointMobile = "320px"; // A mobile device's minimum available screen width. Many older feature phones have screens smaller than this value.
export const cdxMinWidthBreakpointTablet = "640px"; // A tablet device's minimum available screen width. Note: the size chosen is eager to be re-evaluated with Web team and Product Analytics.
export const cdxMinWidthBreakpointDesktop = "1120px"; // A desktop device's minimum available screen width.
export const cdxMinWidthBreakpointDesktopWide = "1680px"; // A wider desktop's minimum available screen width.
export const cdxMinWidthToggleSwitch = "48px";
export const cdxPositionOffsetBorderWidthBase = "-1px";
export const cdxPositionOffsetInputRadioFocus = "-0.25em";
export const cdxSpacing0 = "0";
export const cdxSpacing12 = "2px";
export const cdxSpacing25 = "4px";
export const cdxSpacing30 = "5px"; // This token is an exception to the scale.  Used as vertical `padding` in inputs and controls to achieve the default 32px component height.
export const cdxSpacing35 = "6px"; // This token is an exception to the scale.  Used as `padding` of the ToggleSwitch component.
export const cdxSpacing50 = "8px";
export const cdxSpacing75 = "12px";
export const cdxSpacing100 = "16px";
export const cdxSpacing125 = "20px";
export const cdxSpacing150 = "24px";
export const cdxSpacing200 = "32px";
export const cdxSpacing250 = "40px";
export const cdxSpacing300 = "48px";
export const cdxSpacing400 = "64px";
export const cdxSpacingHalf = "50%"; // From here on, spacing tokens which are used for positioning values.
export const cdxSpacingFull = "100%";
export const cdxSpacingHorizontalButton = "12px - 1px"; // Padding should equal 12px of spacing minus the width of the border
export const cdxSpacingHorizontalButtonIconOnly = "6px - 1px"; // Padding should equal 6px of spacing minus the width of the border
export const cdxSpacingHorizontalButtonLarge = "16px - 1px"; // Padding should equal 16px of spacing minus the width of the border
export const cdxSpacingHorizontalInputTextTwoEndIcons = "calc( 8px * 2 + 1em )"; // Rely on `calc()` to make token output usable in all formats. When there are two end icons, (i.e. a clear icon and an end icon), we need to double the horizontal padding and account for the size of the extra icon. This token can be used to calculate the horizontal position of the clear icon and the padding-end of the text input.
export const cdxSpacingStartTypeaheadSearchFigure = "12px"; // The amount of space between the TypeaheadSearch figure's parent component and the TypeaheadSearch figure (input icon container, search result thumbnail, and footer icon container). We want this space to be uniform so that the figures vertically line up nicely. We use the same horizontal padding as the MenuItem.
export const cdxSpacingStartTypeaheadSearchIcon = "calc( 12px + ( 40px - 20px ) / 2 )"; // The padding required for the icon to center align with the menu item thumbnail. We calculate the difference in size and add it to the expected spacing.
export const cdxSpacingTypeaheadSearchFocusAddition = "calc( ( 12px + 40px ) - ( 20px + 8px ) )"; // The amount the width of the input increases when it is focused to allow for the extra spacing around the search figures. The caret position should remain static. This calculates the padding-left of the input when expanded minus the padding-left of the input when not expanded. (Note that both padding values actually include `@spacing-50` as well, but it was left out of the calculation for simplicity's sake.)
export const cdxBorderWidthBase = "1px";
export const cdxBorderWidthThick = "2px";
export const cdxBorderWidthInputRadioChecked = "6px";
export const cdxBorderColorBase = "#a2a9b1";
export const cdxBorderColorInteractive = "#72777d";
export const cdxBorderColorDisabled = "#c8ccd1";
export const cdxBorderColorSubtle = "#c8ccd1";
export const cdxBorderColorMuted = "#eaecf0";
export const cdxBorderColorInverted = "#fff";
export const cdxBorderColorProgressive = "#36c";
export const cdxBorderColorProgressiveHover = "#447ff5";
export const cdxBorderColorProgressiveActive = "#2a4b8d";
export const cdxBorderColorProgressiveFocus = "#36c";
export const cdxBorderColorDestructive = "#d73333";
export const cdxBorderColorDestructiveHover = "#ff4242";
export const cdxBorderColorDestructiveActive = "#b32424";
export const cdxBorderColorDestructiveFocus = "#d73333";
export const cdxBorderColorError = "#b32424";
export const cdxBorderColorErrorHover = "#ff4242";
export const cdxBorderColorWarning = "#a66200";
export const cdxBorderColorSuccess = "#096450";
export const cdxBorderColorNotice = "#54595d";
export const cdxBorderColorTransparent = "transparent";
export const cdxBorderColorDivider = "#a2a9b1";
export const cdxBorderColorInputHover = "#72777d";
export const cdxBorderColorInputBinary = "#72777d";
export const cdxBorderColorInputBinaryHover = "#447ff5";
export const cdxBorderColorInputBinaryActive = "#2a4b8d";
export const cdxBorderColorInputBinaryFocus = "#36c";
export const cdxBorderColorInputBinaryChecked = "#36c";
export const cdxBorderBase = "1px solid #a2a9b1";
export const cdxBorderSubtle = "1px solid #c8ccd1";
export const cdxBorderProgressive = "1px solid #36c";
export const cdxBorderDestructive = "1px solid #d73333";
export const cdxBorderRadiusBase = "2px";
export const cdxBorderRadiusSharp = "0";
export const cdxBorderRadiusPill = "9999px";
export const cdxBorderRadiusCircle = "50%"; // Use `50%` for circle or ellipsis. See https://stackoverflow.com/a/29966500
export const cdxOutlineBaseFocus = "1px solid transparent"; // Enable Windows high contrast mode on certain widgets, that have default outlines overridden.
export const cdxOutlineColorProgressiveFocus = "#36c"; // Use in places where no more customized focus styles are provided, for example on generic `:focus`.
export const cdxBackgroundImageInputCheckboxChecked = "url( 'data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"%23fff\" d=\"M7 14.17L2.83 10l-1.41 1.41L7 17 19 5l-1.41-1.42z\"/></svg>' )";
export const cdxMinHeightTextArea = "64px";
export const cdxMinHeightTableHeader = "64px";
export const cdxMinHeightTableFooter = "64px";

// DEPRECATED TOKENS
// Warning: the following token name is deprecated (Use `color-subtle` instead. Note, that `color-subtle` is using `color.gray600` instead of `color.gray500` now.)
export const cdxColorBaseSubtle = "#72777d";
// Warning: the following token name is deprecated (Use `font-family-sans--fallback` instead. See T247166.)
export const cdxFontFamilySans = "'Helvetica Neue', 'Helvetica', 'Liberation Sans', 'Arial', sans-serif";
// Warning: the following token name is deprecated (Legacy line-height. Use `line-height-small` instead.)
export const cdxLineHeightXSmall = "1.4285714";
// Warning: the following token name is deprecated (No replacement for this token. Only used in non-Codex products and design decision is to need to rely on background for this state.)
export const cdxBackgroundColorPrimaryHover = "rgba( 51, 102, 204, 0.1 )";
// Warning: the following token name is deprecated, use cdxMinWidthBreakpointMobile instead. (Legacy breakpoint. Use `min-width`/`max-width` breakpoint token instead. A mobile device's screen width. Many older feature phones have screens smaller than this value.)
export const cdxWidthBreakpointMobile = "320px";
// Warning: the following token name is deprecated (Legacy breakpoint. Use `min-width`/`max-width` breakpoint token instead. A tablet device's screen width.)
export const cdxWidthBreakpointTablet = "720px";
// Warning: the following token name is deprecated (Legacy breakpoint. Use `min-width`/`max-width` breakpoint token instead. A desktop device's screen width.)
export const cdxWidthBreakpointDesktop = "1000px";
// Warning: the following token name is deprecated (Legacy breakpoint. Use `min-width`/`max-width` breakpoint token instead. A wider desktop's screen width.)
export const cdxWidthBreakpointDesktopWide = "1200px";
// Warning: the following token name is deprecated (Legacy breakpoint. Use `min-width`/`max-width` breakpoint token instead. An extra wide desktop's screen width.)
export const cdxWidthBreakpointDesktopExtrawide = "2000px";